export default class BitloopsParserVisitor extends antlr4.tree.ParseTreeVisitor {
    visitInitializer(ctx: any): any;
    visitBindingPattern(ctx: any): any;
    visitFieldList(ctx: any): any;
    visitEvaluationFieldList(ctx: any): any;
    visitEvaluationField(ctx: any): any;
    visitPropFields(ctx: any): any;
    visitPropsIdentifier(ctx: any): any;
    visitBitloopsIdentifiers(ctx: any): any;
    visitPrimitives(ctx: any): any;
    visitIdentifier(ctx: any): any;
    visitUpperCaseIdentifier(ctx: any): any;
    visitStruct(ctx: any): any;
    visitRegularErrorTypeEvaluation(ctx: any): any;
    visitMethodArguments(ctx: any): any;
    visitOpenParen(ctx: any): any;
    visitCloseParen(ctx: any): any;
    visitIdentifierString(ctx: any): any;
    visitRegularDTOEvaluationString(ctx: any): any;
    visitRegularStructEvaluationString(ctx: any): any;
    visitRegularErrorTypeEvaluationString(ctx: any): any;
    visitExecuteExpression(ctx: any): any;
    visitDeleteKeyword(ctx: any): any;
    visitRegularStringEvaluation(ctx: any): any;
    visitRegularIntegerEvaluation(ctx: any): any;
    visitRegularDecimalEvaluation(ctx: any): any;
    visitRegularBooleanEvaluation(ctx: any): any;
    visitRegularStructEvaluation(ctx: any): any;
    visitRegularDTOEvaluation(ctx: any): any;
    visitField(ctx: any): any;
    visitPrimitivePrimType(ctx: any): any;
    visitArrayBitloopsPrimType(ctx: any): any;
    visitBitloopsBuiltInClassPrimType(ctx: any): any;
    visitBitloopsIdentifierPrimType(ctx: any): any;
    visitBitloopsBuiltInClass(ctx: any): any;
    visitPredefinedType(ctx: any): any;
    visitTypeName(ctx: any): any;
    visitMethodDefinitionList(ctx: any): any;
    visitMethodDefinition(ctx: any): any;
    visitTypeQuery(ctx: any): any;
    visitTypeQueryExpression(ctx: any): any;
    visitTypeAnnotation(ctx: any): any;
    visitParameterList(ctx: any): any;
    visitRequiredParameterList(ctx: any): any;
    visitParameter(ctx: any): any;
    visitOptionalParameter(ctx: any): any;
    visitRestParameter(ctx: any): any;
    visitRequiredParameter(ctx: any): any;
    visitAccessibilityModifier(ctx: any): any;
    visitIdentifierOrPattern(ctx: any): any;
    visitIndexSignature(ctx: any): any;
    visitEnumBody(ctx: any): any;
    visitEnumMemberList(ctx: any): any;
    visitEnumMember(ctx: any): any;
    visitNamespaceDeclaration(ctx: any): any;
    visitNamespaceName(ctx: any): any;
    visitImportAliasDeclaration(ctx: any): any;
    visitDecoratorList(ctx: any): any;
    visitDecorator(ctx: any): any;
    visitDecoratorMemberExpression(ctx: any): any;
    visitDecoratorCallExpression(ctx: any): any;
    visitProgram(ctx: any): any;
    visitSourceElement(ctx: any): any;
    visitJestTestDeclaration(ctx: any): any;
    visitErrorEvaluation(ctx: any): any;
    visitEvaluation(ctx: any): any;
    visitCondition(ctx: any): any;
    visitReturnStatement(ctx: any): any;
    visitConstDeclaration(ctx: any): any;
    visitVariableDeclaration(ctx: any): any;
    visitStatement(ctx: any): any;
    visitApplyRulesStatement(ctx: any): any;
    visitApplyRuleStatementRulesList(ctx: any): any;
    visitApplyRulesRule(ctx: any): any;
    visitBlock(ctx: any): any;
    visitStatementList(ctx: any): any;
    visitFromBlock(ctx: any): any;
    visitMultipleImportStatement(ctx: any): any;
    visitVariableDeclarationList(ctx: any): any;
    visitEmptyStatement_(ctx: any): any;
    visitExpressionStatement(ctx: any): any;
    visitIfStatement(ctx: any): any;
    visitDoStatement(ctx: any): any;
    visitWhileStatement(ctx: any): any;
    visitForStatement(ctx: any): any;
    visitForVarStatement(ctx: any): any;
    visitForInStatement(ctx: any): any;
    visitForVarInStatement(ctx: any): any;
    visitVarModifier(ctx: any): any;
    visitContinueStatement(ctx: any): any;
    visitBreakStatement(ctx: any): any;
    visitWithStatement(ctx: any): any;
    visitSwitchStatement(ctx: any): any;
    visitCaseBlock(ctx: any): any;
    visitCaseClauses(ctx: any): any;
    visitCaseClause(ctx: any): any;
    visitDefaultClause(ctx: any): any;
    visitLabelledStatement(ctx: any): any;
    visitThrowStatement(ctx: any): any;
    visitTryStatement(ctx: any): any;
    visitCatchProduction(ctx: any): any;
    visitFinallyProduction(ctx: any): any;
    visitDebuggerStatement(ctx: any): any;
    visitDomainFieldDeclaration(ctx: any): any;
    visitIsBrokenStatement(ctx: any): any;
    visitDomainRuleBody(ctx: any): any;
    visitDomainRuleDeclaration(ctx: any): any;
    visitAggregateDeclaration(ctx: any): any;
    visitDomainConstDeclaration(ctx: any): any;
    visitEntityDeclaration(ctx: any): any;
    visitEntityBody(ctx: any): any;
    visitValueObjectDeclaration(ctx: any): any;
    visitDomainConstDeclarationList(ctx: any): any;
    visitPublicMethodDeclarationList(ctx: any): any;
    visitPrivateMethodDeclarationList(ctx: any): any;
    visitDomainConstructorDeclaration(ctx: any): any;
    visitUseCaseIdentifier(ctx: any): any;
    visitUseCaseDeclaration(ctx: any): any;
    visitPropsDeclaration(ctx: any): any;
    visitReadModelDeclaration(ctx: any): any;
    visitRepoPortDeclaration(ctx: any): any;
    visitRepoPortIdentifier(ctx: any): any;
    visitAggregateRootIdentifier(ctx: any): any;
    visitRepoExtendsList(ctx: any): any;
    visitRepoPortMethodDefinitions(ctx: any): any;
    visitRepoPortExtendableIdentifierList(ctx: any): any;
    visitRepoPortExtendableIdentifier(ctx: any): any;
    visitDtoDeclaration(ctx: any): any;
    visitStructDeclaration(ctx: any): any;
    visitDtoEvaluationIdentifier(ctx: any): any;
    visitDtoEvaluation(ctx: any): any;
    visitValueObjectEvaluation(ctx: any): any;
    visitDomainEvaluationInputFieldList(ctx: any): any;
    visitDomainEvaluationInputRegular(ctx: any): any;
    visitEntityEvaluation(ctx: any): any;
    visitStructEvaluationIdentifier(ctx: any): any;
    visitStructEvaluation(ctx: any): any;
    visitBuiltInClassEvaluation(ctx: any): any;
    visitPropsEvaluation(ctx: any): any;
    visitDomainErrorDeclaration(ctx: any): any;
    visitApplicationErrorDeclaration(ctx: any): any;
    visitDomainErrorIdentifier(ctx: any): any;
    visitApplicationErrorIdentifier(ctx: any): any;
    visitUseCaseExecuteDeclaration(ctx: any): any;
    visitRestControllerParameters(ctx: any): any;
    visitRestControllerExecuteDeclaration(ctx: any): any;
    visitRestControllerMethodDeclaration(ctx: any): any;
    visitHttpMethod(ctx: any): any;
    visitRESTControllerDeclaration(ctx: any): any;
    visitGraphQLControllerDeclaration(ctx: any): any;
    visitGraphQLResolverOptions(ctx: any): any;
    visitGraphQLOperationTypeAssignment(ctx: any): any;
    visitGraphQLOperationInputTypeAssignment(ctx: any): any;
    visitGraphQLResolverInputType(ctx: any): any;
    visitGraphQLOperation(ctx: any): any;
    visitGraphQLControllerExecuteDeclaration(ctx: any): any;
    visitGraphQLControllerParameters(ctx: any): any;
    visitGraphQLControllerReturnType(ctx: any): any;
    visitDtoIdentifier(ctx: any): any;
    visitDtoIdentifiers(ctx: any): any;
    visitErrorIdentifier(ctx: any): any;
    visitErrorIdentifiers(ctx: any): any;
    visitValueObjectIdentifier(ctx: any): any;
    visitEntityIdentifier(ctx: any): any;
    visitDomainRuleIdentifier(ctx: any): any;
    visitReturnOkType(ctx: any): any;
    visitReturnErrorsType(ctx: any): any;
    visitReturnOkErrorType(ctx: any): any;
    visitPackagePortIdentifier(ctx: any): any;
    visitPackagePortDeclaration(ctx: any): any;
    visitPublicMethodDeclarationExpression(ctx: any): any;
    visitPrivateMethodDeclarationExpression(ctx: any): any;
    visitPrivateMethodDeclaration(ctx: any): any;
    visitPublicMethodDeclaration(ctx: any): any;
    visitReturnPublicMethodType(ctx: any): any;
    visitReturnPrivateMethodType(ctx: any): any;
    visitPropertyMemberBase(ctx: any): any;
    visitIndexMemberDeclaration(ctx: any): any;
    visitGeneratorMethod(ctx: any): any;
    visitGeneratorFunctionDeclaration(ctx: any): any;
    visitGeneratorBlock(ctx: any): any;
    visitGeneratorDefinition(ctx: any): any;
    visitIteratorBlock(ctx: any): any;
    visitIteratorDefinition(ctx: any): any;
    visitFormalParameterList(ctx: any): any;
    visitFormalParameterArg(ctx: any): any;
    visitLastFormalParameterArg(ctx: any): any;
    visitFunctionBody(ctx: any): any;
    visitArrayLiteral(ctx: any): any;
    visitElementList(ctx: any): any;
    visitObjectLiteral(ctx: any): any;
    visitRegularVariableEvaluationORliteralORexpression(ctx: any): any;
    visitPropertyExpressionAssignment(ctx: any): any;
    visitComputedPropertyExpressionAssignment(ctx: any): any;
    visitPropertyGetter(ctx: any): any;
    visitPropertySetter(ctx: any): any;
    visitMethodProperty(ctx: any): any;
    visitPropertyShorthand(ctx: any): any;
    visitRestParameterInObject(ctx: any): any;
    visitGetAccessor(ctx: any): any;
    visitSetAccessor(ctx: any): any;
    visitPropertyName(ctx: any): any;
    visitArguments(ctx: any): any;
    visitArgumentList(ctx: any): any;
    visitArgument(ctx: any): any;
    visitExpressionSequence(ctx: any): any;
    visitFunctionExpressionDeclaration(ctx: any): any;
    visitParenthesizedExpression(ctx: any): any;
    visitToStringExpression(ctx: any): any;
    visitAdditiveExpression(ctx: any): any;
    visitRelationalExpression(ctx: any): any;
    visitLogicalAndExpression(ctx: any): any;
    visitLiteralExpression(ctx: any): any;
    visitLogicalOrExpression(ctx: any): any;
    visitArrayLiteralExpression(ctx: any): any;
    visitMemberDotExpression(ctx: any): any;
    visitNotExpression(ctx: any): any;
    visitEvaluationExpression(ctx: any): any;
    visitIdentifierExpression(ctx: any): any;
    visitThisExpression(ctx: any): any;
    visitAssignmentExpression(ctx: any): any;
    visitMethodCallExpression(ctx: any): any;
    visitLogicalXorExpression(ctx: any): any;
    visitGetClassExpression(ctx: any): any;
    visitEqualityExpression(ctx: any): any;
    visitMultiplicativeExpression(ctx: any): any;
    visitAsExpression(ctx: any): any;
    visitArrowFunctionDeclaration(ctx: any): any;
    visitArrowFunctionParameters(ctx: any): any;
    visitArrowFunctionBody(ctx: any): any;
    visitAssignmentOperator(ctx: any): any;
    visitNullLiteral(ctx: any): any;
    visitBooleanLiteral(ctx: any): any;
    visitStringLiteral(ctx: any): any;
    visitTemplateStringLiteralLabel(ctx: any): any;
    visitRegularExpressionLiteral(ctx: any): any;
    visitNumericLiteralLabel(ctx: any): any;
    visitTemplateStringLiteral(ctx: any): any;
    visitTemplateStringAtom(ctx: any): any;
    visitIntegerLiteral(ctx: any): any;
    visitDecimalLiteral(ctx: any): any;
    visitIdentifierName(ctx: any): any;
    visitIdentifierOrKeyWord(ctx: any): any;
    visitReservedWord(ctx: any): any;
    visitKeyword(ctx: any): any;
    visitGetter(ctx: any): any;
    visitSetter(ctx: any): any;
    visitEos(ctx: any): any;
    visitIsInstanceOf(ctx: any): any;
    visitClassTypes(ctx: any): any;
}
import antlr4 from "antlr4";
